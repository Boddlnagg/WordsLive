<!--
- WordsLive - worship projection software
- Copyright (c) 2013 Patrick Reisert
- 
- This program is free software: you can redistribute it and/or modify
- it under the terms of the GNU General Public License as published by
- the Free Software Foundation, either version 3 of the License, or
- (at your option) any later version.
- 
- This program is distributed in the hope that it will be useful,
- but WITHOUT ANY WARRANTY; without even the implied warranty of
- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- GNU General Public License for more details.
- 
- You should have received a copy of the GNU General Public License
- along with this program. If not, see <http://www.gnu.org/licenses/>.
-->

<Window
	x:Class="WordsLive.Editor.EditorWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:WordsLive"
	xmlns:resx="clr-namespace:WordsLive.Resources"
	xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
	Title="Editor - WordsLive"
	MinHeight="300"
	MinWidth="300"
	Height="{Binding Source={StaticResource settings}, Path=Default.EditorWindowHeight, Mode=TwoWay}"
	Width="{Binding Source={StaticResource settings}, Path=Default.EditorWindowWidth, Mode=TwoWay}"
	Top="{Binding Source={StaticResource settings}, Path=Default.EditorWindowTop, Mode=TwoWay}"
	Left="{Binding Source={StaticResource settings}, Path=Default.EditorWindowLeft, Mode=TwoWay}"
	WindowState="{Binding Source={StaticResource settings}, Path=Default.EditorWindowState, Mode=TwoWay}"
	Closing="Window_Closing"
	Icon="/WordsLive;component/Artwork/Editor.png ">
	<Window.CommandBindings>
		<CommandBinding Command="New" Executed="OnExecuteCommand"/>
		<CommandBinding Command="Open" Executed="OnExecuteCommand"/>
		<CommandBinding Command="Save" Executed="OnExecuteCommand" CanExecute="OnCommandCanExecute"/>
		<CommandBinding Command="SaveAs" Executed="OnExecuteCommand" CanExecute="OnCommandCanExecute"/>
		<CommandBinding Command="Close" Executed="OnExecuteCommand" CanExecute="OnCommandCanExecute"/>
		<CommandBinding Command="{x:Static local:CustomCommands.Export}" Executed="OnExecuteCommand" CanExecute="OnCommandCanExecute"/>
		<CommandBinding Command="{x:Static local:CustomCommands.ImportFromClipboard}" Executed="OnExecuteCommand" CanExecute="OnCommandCanExecute"/>
		<CommandBinding Command="{x:Static local:CustomCommands.SwitchWindow}" Executed="OnExecuteCommand"/>
		<CommandBinding Command="{x:Static local:CustomCommands.ViewCurrent}" Executed="OnExecuteCommand" CanExecute="OnCommandCanExecute"/>
		<CommandBinding Command="{x:Static local:CustomCommands.SongSettings}" Executed="OnExecuteCommand" CanExecute="OnCommandCanExecute"/>
		<CommandBinding Command="{x:Static local:CustomCommands.EditChords}" Executed="OnExecuteCommand" CanExecute="OnCommandCanExecute"/>
		<CommandBinding Command="{x:Static local:CustomCommands.AddMedia}" Executed="OnExecuteCommand" CanExecute="OnCommandCanExecute"/>
		<CommandBinding Command="{x:Static local:CustomCommands.ShowSonglist}" Executed="OnExecuteCommand"/>
	</Window.CommandBindings>
	<Window.Resources>
		<DataTemplate x:Key="ClosableTabItemTemplate">
			<DockPanel MinWidth="120" HorizontalAlignment="Stretch">
				<Button
					Command="Close"
					CommandParameter="{Binding}"
					DockPanel.Dock="Right"
					Focusable="False"
					Margin="3,1,0,0"
					Padding="0"
					VerticalContentAlignment="Bottom"
					Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
					Width="14" Height="14">
					<Path Margin="2"
						  Stroke="Gray"
						  StrokeThickness="2"
						  StrokeStartLineCap="Round"
						  StrokeEndLineCap="Round"
						  Stretch="Uniform"
						  VerticalAlignment="Center"
						  HorizontalAlignment="Center">
						<Path.Data>
							<Geometry>M0,0 L10,10 M0,10 L10,0</Geometry>
						</Path.Data>
					</Path>
				</Button>
				<ContentPresenter 
					Content="{Binding Song.Title}"
					VerticalAlignment="Center" />
			</DockPanel>
		</DataTemplate>
	</Window.Resources>
	<Grid
		x:Name="LayoutRoot">
		<Grid.RowDefinitions>
			<RowDefinition
				Height="Auto" />
			<RowDefinition
				Height="Auto" />
			<RowDefinition
				Height="*" />
			<RowDefinition
				Height="Auto" />
		</Grid.RowDefinitions>
		<Menu Grid.Row="0">
			<MenuItem Header="{x:Static resx:Resource.eMenuFile}">
				<MenuItem Header="{x:Static resx:Resource.eMenuNewSong}" Command="New">
					<MenuItem.Icon>
						<Image Width="24" Source="/WordsLive;component/Artwork/New.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Command="Open" Header="{Binding Converter={StaticResource AppendEllipsisConverter}, ConverterParameter={x:Static resx:Resource.eMenuOpenSong}}">
					<MenuItem.Icon>
						<Image Width="24" Source="/WordsLive;component/Artwork/Open.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					Header="{x:Static resx:Resource.eMenuSaveSong}" Command="Save">
					<MenuItem.Icon>
						<Image Width="24" Source="/WordsLive;component/Artwork/Save.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					Header="{Binding Converter={StaticResource AppendEllipsisConverter}, ConverterParameter={x:Static resx:Resource.eMenuSaveSongAs}}" Command="SaveAs"/>
				<MenuItem
					Header="{Binding Converter={StaticResource AppendEllipsisConverter}, ConverterParameter={x:Static resx:Resource.eMenuExportSong}}" Command="{x:Static local:CustomCommands.Export}"/>
				<Separator/>
				<MenuItem
					Header="{x:Static resx:Resource.eMenuImportFromClipboard}" Command="{x:Static local:CustomCommands.ImportFromClipboard}"/>
				<Separator/>
				<MenuItem
					Header="{x:Static resx:Resource.eMenuAddToPortfolio}" Command="{x:Static local:CustomCommands.AddMedia}"/>
				<MenuItem
					Header="{x:Static resx:Resource.eMenuCloseSong}" Command="Close"/>
			</MenuItem>
			<MenuItem Header="{x:Static resx:Resource.eMenuEdit}">
				<MenuItem Header="{x:Static resx:Resource.eMenuUndo}" Command="Undo" CommandTarget="{Binding ElementName=Tabs, Path=SelectedItem.Grid}" >
					<MenuItem.Icon>
						<Image Width="24" Source="/WordsLive;component/Artwork/Undo.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="{x:Static resx:Resource.eMenuRedo}" Command="Redo" CommandTarget="{Binding ElementName=Tabs, Path=SelectedItem.Grid}">
					<MenuItem.Icon>
						<Image Width="24" Source="/WordsLive;component/Artwork/Redo.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="{Binding Converter={StaticResource AppendEllipsisConverter}, ConverterParameter={x:Static resx:Resource.eMenuChangeBackground}}" Command="{x:Static local:CustomCommands.ChooseBackground}">
					<MenuItem.Icon>
						<Image Width="24" Source="/WordsLive;component/Artwork/ChooseBackground.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="{Binding Converter={StaticResource AppendEllipsisConverter}, ConverterParameter={x:Static resx:Resource.eMenuFormatSong}}" Command="{x:Static local:CustomCommands.SongSettings}">
					<MenuItem.Icon>
						<Image Width="24" Source="/WordsLive;component/Artwork/Formatting.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="{x:Static resx:Resource.eMenuSplitTextAtCursor}" Command="{x:Static local:CustomCommands.Split}"/>
				<MenuItem Header="{Binding Converter={StaticResource AppendEllipsisConverter}, ConverterParameter={x:Static resx:Resource.eMenuEditChords}}" Command="{x:Static local:CustomCommands.EditChords}"/>
			</MenuItem>
			<MenuItem Header="{x:Static resx:Resource.veMenuWindow}">
				<MenuItem Header="{x:Static resx:Resource.veMenuShowSonglist}" Command="{x:Static local:CustomCommands.ShowSonglist}">
					<MenuItem.Icon>
						<Image Width="24" Source="/WordsLive;component/Artwork/Songlist.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="{x:Static resx:Resource.eMenuShowPresenter}" Command="{x:Static local:CustomCommands.SwitchWindow}">
					<MenuItem.Icon>
						<Image Width="24" Source="/WordsLive;component/Artwork/Viewer.png" />
					</MenuItem.Icon>
				</MenuItem>
			</MenuItem>
		</Menu>
		<ToolBar Grid.Row="1" ToolBarTray.IsLocked="True">
			<Button Command="{x:Static local:CustomCommands.SwitchWindow}" ToolTip="{Binding Converter={StaticResource RemoveAccessKeyConverter}, ConverterParameter={x:Static resx:Resource.eMenuShowPresenter}}">
				<Image
					Width="32"
					Height="32"
					Source="/WordsLive;component/Artwork/Viewer.png" />
			</Button>
			<Button Command="{x:Static local:CustomCommands.ViewCurrent}" Style="{StaticResource markDisabledButton}" ToolTip="{Binding Converter={StaticResource RemoveAccessKeyConverter}, ConverterParameter={x:Static resx:Resource.eToolbarSaveAndReload}}">
				<Image
					Width="32"
					Height="32"
					Source="/WordsLive;component/Artwork/ViewCurrent.png" />
			</Button>
			<Separator/>
			<Button Command="New" ToolTip="{Binding Converter={StaticResource RemoveAccessKeyConverter}, ConverterParameter={x:Static resx:Resource.eMenuNewSong}}">
				<Image
					Width="32"
					Height="32"
					Source="/WordsLive;component/Artwork/New.png" />
			</Button>
			<Button Command="Open" ToolTip="{Binding Converter={StaticResource RemoveAccessKeyConverter}, ConverterParameter={x:Static resx:Resource.eMenuOpenSong}}">
				<Image
					Width="32"
					Height="32"
					Source="/WordsLive;component/Artwork/Open.png" />
			</Button>
			<Button Command="Save" Style="{StaticResource markDisabledButton}" ToolTip="{Binding Converter={StaticResource RemoveAccessKeyConverter}, ConverterParameter={x:Static resx:Resource.eMenuSaveSong}}" >
				<Image
					Width="32"
					Height="32"
					Source="/WordsLive;component/Artwork/Save.png" />
			</Button>
			<Separator/>
			<Button Command="Undo" CommandTarget="{Binding ElementName=Tabs, Path=SelectedItem.Grid}" Style="{StaticResource markDisabledButton}" ToolTip="{Binding Converter={StaticResource RemoveAccessKeyConverter}, ConverterParameter={x:Static resx:Resource.eMenuUndo}}" >
				<Image
					Width="32"
					Height="32"
					Source="/WordsLive;component/Artwork/Undo.png"/>
			</Button>
			<Button Command="Redo" CommandTarget="{Binding ElementName=Tabs, Path=SelectedItem.Grid}" Style="{StaticResource markDisabledButton}" ToolTip="{Binding Converter={StaticResource RemoveAccessKeyConverter}, ConverterParameter={x:Static resx:Resource.eMenuRedo}}" >
				<Image
					Width="32"
					Height="32"
					Source="/WordsLive;component/Artwork/Redo.png" />
			</Button>
			<Separator/>
			<Button Command="{x:Static local:CustomCommands.ChooseBackground}" Style="{StaticResource markDisabledButton}" ToolTip="{Binding Converter={StaticResource RemoveAccessKeyConverter}, ConverterParameter={x:Static resx:Resource.eMenuChangeBackground}}">
				<Image
					Width="32"
					Height="32"
					Source="/WordsLive;component/Artwork/ChooseBackground.png" />
			</Button>
			<CheckBox ToolTip="{x:Static resx:Resource.eToolbarShowChords}" IsChecked="{Binding ShowChords}">
				<Image Width="32" Height="32" Source="/WordsLive;component/Artwork/ShowChords.png" />
			</CheckBox>
			<xctk:IntegerUpDown
				Value="{Binding ElementName=Tabs, Path=SelectedItem.Grid.SelectedElement.Size, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
				Minimum="1" Maximum="99"
				ToolTip="{x:Static resx:Resource.eToolbarFontSize}"
				IsEnabled="{Binding FontSizeEnabled}"
				FontSize="18" Width="50"/>
			<CheckBox ToolTip="{x:Static resx:Resource.eToolbarSingleFontSize}" IsEnabled="{Binding FontSizeEnabled}" IsChecked="{Binding ElementName=Tabs, Path=SelectedItem.Grid.SingleFontSize}" Style="{StaticResource markDisabledCheckBox}">
				<Image Width="16" Height="32" Source="/WordsLive;component/Artwork/LockChains.png" />
			</CheckBox>
		</ToolBar>
		<Grid Grid.Row="2" Grid.Column="0" AllowDrop="True" Drop="Tabs_Drop" DragEnter="Tabs_DragEnterOrOver" DragOver="Tabs_DragEnterOrOver" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
			<TabControl x:Name="Tabs" ItemsSource="{Binding}" ItemTemplate="{StaticResource ClosableTabItemTemplate}" HorizontalContentAlignment="Stretch">
				<TabControl.ItemContainerStyle>
					<Style TargetType="TabItem">
						<Setter Property="Header" Value="{Binding Mode=OneTime}"/>
						<Setter Property="Content" Value="{Binding Grid}"/>
						<Setter Property="ToolTip" Value="{Binding Song.Uri}"/>
						<Setter Property="ContextMenu">
							<Setter.Value>
								<ContextMenu>
									<!-- Binding Mode=OneTime is important here to prevent a memory leak -->
									<MenuItem Header="{x:Static resx:Resource.eMenuSaveSong}" Command="Save" CommandParameter="{Binding Mode=OneTime}"/>
									<MenuItem Header="{x:Static resx:Resource.eMenuCloseSong}" Command="Close" CommandParameter="{Binding Mode=OneTime}" />
								</ContextMenu>
							</Setter.Value>
						</Setter>
					</Style>
				</TabControl.ItemContainerStyle>
			</TabControl>
		</Grid>
		<StatusBar
			Grid.Row="3"
			Height="23" />
	</Grid>
</Window>