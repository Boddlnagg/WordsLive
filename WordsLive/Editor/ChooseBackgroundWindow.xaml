<!--
- WordsLive - worship projection software
- Copyright (c) 2013 Patrick Reisert
- 
- This program is free software: you can redistribute it and/or modify
- it under the terms of the GNU General Public License as published by
- the Free Software Foundation, either version 3 of the License, or
- (at your option) any later version.
- 
- This program is distributed in the hope that it will be useful,
- but WITHOUT ANY WARRANTY; without even the implied warranty of
- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- GNU General Public License for more details.
- 
- You should have received a copy of the GNU General Public License
- along with this program. If not, see <http://www.gnu.org/licenses/>.
-->

<Window x:Class="WordsLive.Editor.ChooseBackgroundWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:local="clr-namespace:WordsLive.Editor"
		xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
		xmlns:resx="clr-namespace:WordsLive.Resources"
		xmlns:imageloader="clr-namespace:WordsLive.Utils.ImageLoader"
		xmlns:storage="clr-namespace:WordsLive.Core.Songs.Storage;assembly=WordsLive.Core"
		Title="{x:Static resx:Resource.cbTitle}"
		MinWidth="600" MinHeight="350"
		Height = "{Binding Source={StaticResource settings}, Path=Default.ChooseBackgroundWindowHeight, Mode=TwoWay}"
	Width = "{Binding Source={StaticResource settings}, Path=Default.ChooseBackgroundWindowWidth, Mode=TwoWay}"
	Top="{Binding Source={StaticResource settings}, Path=Default.ChooseBackgroundWindowTop, Mode=TwoWay}"
	Left="{Binding Source={StaticResource settings}, Path=Default.ChooseBackgroundWindowLeft, Mode=TwoWay}"
	WindowState="{Binding Source={StaticResource settings}, Path=Default.ChooseBackgroundWindowState, Mode=TwoWay}" Icon="/WordsLive;component/Artwork/ChooseBackground.png">
	<Window.Resources>
		<local:BackgroundFileConverter x:Key="backgroundFileConverter"/>
	</Window.Resources>
	<DockPanel>
		<Grid DockPanel.Dock="Bottom" Height="35">
			<CheckBox IsChecked="{Binding Path=UseColor, Mode=TwoWay}" Height="Auto" VerticalAlignment="Center" Name="UseColorCheckbox" HorizontalAlignment="Left" Margin="6,0,0,0" Content="{x:Static resx:Resource.cbUseSingleColor}"/>
			<xctk:ColorPicker Margin="167,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" Width="50" IsEnabled="{Binding ElementName=UseColorCheckbox, Path=IsChecked}" Name="ColorPicker"/>
			<Button Content="{x:Static resx:Resource.dialogOK}" IsDefault="True" Margin="0,0,5,0" VerticalAlignment="Center" HorizontalAlignment="Right" Width="75" Click="OKButton_Click" />
			<Button Content="{x:Static resx:Resource.dialogCancel}" IsCancel="True" Margin="0,0,86,0" VerticalAlignment="Center" HorizontalAlignment="Right" Width="75" />
			<Slider Height="23" Minimum="100" Maximum="300" Value="{Binding Source={StaticResource settings}, Path=Default.ChooseBackgroundPreviewWidth, Mode=TwoWay}" Margin="322,6,167,6" Name="PreviewSizeSlider" VerticalAlignment="Center" />
			<Label Content="{x:Static resx:Resource.cbPreviewSize}" Height="27" HorizontalAlignment="Left" Margin="223,0,0,0" VerticalAlignment="Center" />
		</Grid>
			<Grid IsEnabled="{Binding Path=UseImage}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="5"/>
					<ColumnDefinition Width="2*"/>
				</Grid.ColumnDefinitions>
				<GridSplitter Grid.Column="1"
					Background="#FFF0F0F0"
					BorderBrush="#FFE3E3E3"
					BorderThickness="1,0"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"/>
				<TreeView Grid.Column="0" Name="directoryView" ItemsSource="{Binding}" SelectedItemChanged="directoryView_SelectedItemChanged">
					<TreeView.Resources>
						<HierarchicalDataTemplate DataType="{x:Type storage:BackgroundDirectory}" ItemsSource="{Binding Directories}" >
							<StackPanel Orientation="Horizontal" Margin="2">
								<Image Source="/WordsLive;component/Artwork/Small_Folder.png" Width="16" Height="16"/>
							<TextBlock>
								<TextBlock.Style>
									<Style TargetType="{x:Type TextBlock}">
										<Setter Property="Text" Value="{Binding Name}"/>
										<Style.Triggers>
											<DataTrigger Binding="{Binding Path=IsRoot}" Value="True">
												<Setter Property="Text" Value="Backgrounds" /> <!-- TODO: localize -->
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
						</StackPanel>
						</HierarchicalDataTemplate>
					</TreeView.Resources>
					<TreeView.ItemContainerStyle>
						<Style TargetType="{x:Type TreeViewItem}">
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=IsRoot}" Value="True">
									<Setter Property="TreeViewItem.IsExpanded" Value="True"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</TreeView.ItemContainerStyle>
				</TreeView>
				<ListView Grid.Column="2" ItemsSource="{Binding ElementName=directoryView, Path=SelectedItem.Files}" Name="imageListView">
					<ListView.ItemTemplate>
						<DataTemplate>
							<Grid MaxWidth="{Binding ElementName=PreviewSizeSlider, Path=Value}" MaxHeight="{Binding ElementName=PreviewSizeSlider, Path=Value}"  Margin="1,2,3,1" ToolTip="{Binding Name}" MouseDown="Grid_MouseDown">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="4*"/>
									<ColumnDefinition Width="1*"/>
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="*"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>
								<Image Name="img" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"
								imageloader:Loader.DisplayOption="{Binding Path=., Converter={StaticResource backgroundFileConverter}}"
								imageloader:Loader.Source="{Binding PreviewUri}"
								imageloader:Loader.DisplayWaitingAnimationDuringLoading="True"
								imageloader:Loader.DisplayErrorThumbnailOnError="True"
								imageloader:Loader.SourceType="ExternalResource"
								imageloader:Loader.Loaded="image_ImageLoaderLoaded"/>
							<Image Source="/WordsLive;component/Artwork/Movie.png" Grid.Column="1" Grid.Row="0" VerticalAlignment="Top" Margin="3">
									<Image.Style>
										<Style TargetType="Image">
											<Setter Property="Visibility" Value="Hidden"/>
											<Style.Triggers>
												<DataTrigger Binding="{Binding IsVideo}" Value="True">
													<Setter Property="Visibility" Value="Visible"/>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</Image.Style>
								</Image>
								<TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" TextTrimming="CharacterEllipsis" Text="{Binding Name}" Margin="0,0,0,5"/>
							</Grid>
						<DataTemplate.Triggers>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Path=IsEnabled}" Value="False">
								<Setter TargetName="img" Property="Opacity" Value="0.5"/>
							</DataTrigger>
						</DataTemplate.Triggers>
					</DataTemplate>
					</ListView.ItemTemplate>
					<ListView.ItemsPanel>
						<ItemsPanelTemplate>
							<WrapPanel Width="{Binding (FrameworkElement.ActualWidth), RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}"/>
						</ItemsPanelTemplate>
					</ListView.ItemsPanel>
				</ListView>
			</Grid>
		</DockPanel>
</Window>
