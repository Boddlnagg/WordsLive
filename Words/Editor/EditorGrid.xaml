<Grid x:Class="Words.Editor.EditorGrid"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:local="clr-namespace:Words.Editor"
			 xmlns:my="clr-namespace:Words"
			 xmlns:resx="clr-namespace:Words.Resources"
			 mc:Ignorable="d" 
			 d:DesignHeight="400" d:DesignWidth="800">
	<Grid.CommandBindings>
		<CommandBinding Command="{x:Static my:CustomCommands.Split}" CanExecute="OnCanExecuteCommand" Executed="OnExecuteCommand"/>
		<CommandBinding Command="IncreaseFontSize" Executed="OnExecuteCommand" CanExecute="OnCanExecuteCommand"/>
		<CommandBinding Command="DecreaseFontSize" Executed="OnExecuteCommand" CanExecute="OnCanExecuteCommand"/>
	</Grid.CommandBindings>
	<Grid.Resources>
		<TextBox x:Key="editTextBox"
			AcceptsReturn="True" IsUndoEnabled="False"
			Text="{Binding ElementName=StructureTree, Path=SelectedItem.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
		<Grid x:Key="editTextWithTranslation" Background="White">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="5"/>
				<ColumnDefinition Width="Auto">
				</ColumnDefinition>
			</Grid.ColumnDefinitions>
			<TextBox Name="TextTextBox" Grid.Column="0" AcceptsReturn="True" IsUndoEnabled="False" Language="{Binding ElementName=StructureTree, Path=Items[0].LanguageCode, ConverterCulture=en-US}"
					Text="{Binding ElementName=StructureTree,Path=SelectedItem.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
					 SpellCheck.IsEnabled="{Binding ElementName=EnableSpellCheckCheckBox, Path=IsChecked, Mode=OneWay}"/>
			<Expander Grid.Column="2" ExpandDirection="Left" IsExpanded="{Binding ElementName=StructureTree,Path=SelectedItem.Root.Song.HasTranslation, Mode=OneTime}"
					  Expanded="TranslationExpanderExpandedCollapsed" Collapsed="TranslationExpanderExpandedCollapsed" >
				<Expander.Header>
					<TextBlock Text="{x:Static resx:Resource.eGridTranslation}">
						<TextBlock.LayoutTransform>
							<RotateTransform Angle="90"/>
						</TextBlock.LayoutTransform>
					</TextBlock>
				</Expander.Header>
				<TextBox Name="TranslationTextBox" AcceptsReturn="True" IsUndoEnabled="False"
					 Text="{Binding ElementName=StructureTree,Path=SelectedItem.Translation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
					 Language="{Binding ElementName=StructureTree, Path=Items[0].TranslationLanguageCode, ConverterCulture=en-US}"
					 SpellCheck.IsEnabled="{Binding ElementName=EnableSpellCheckCheckBox, Path=IsChecked, Mode=OneWay}"/>
			</Expander>
		</Grid>
		<Grid x:Key="editLanguageGrid" Margin="10">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"></ColumnDefinition>
				<ColumnDefinition></ColumnDefinition>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
			</Grid.RowDefinitions>
			<Label Grid.Row="0" Grid.Column="0" Content="{x:Static resx:Resource.eGridLanguageText}"/>
			<ComboBox Grid.Row="0" Grid.Column="1" Height="24" VerticalAlignment="Top" IsEditable="True" Text="{Binding ElementName=StructureTree,Path=SelectedItem.Language, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
					  ItemsSource="{Binding Source={x:Static resx:Resource.eGridLanguages}, Converter={StaticResource StringSplitConverter}, ConverterParameter=';'}"/>
			<Label Grid.Row="1" Grid.Column="0" Content="{x:Static resx:Resource.eGridLanguageTranslation}"/>
			<ComboBox Grid.Row="1" Grid.Column="1" Height="24" VerticalAlignment="Top" IsEditable="True" Text="{Binding ElementName=StructureTree,Path=SelectedItem.TranslationLanguage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
					  ItemsSource="{Binding Source={x:Static resx:Resource.eGridLanguages}, Converter={StaticResource StringSplitConverter}, ConverterParameter=';'}" />
		</Grid>
		<Grid x:Key="editSourceGrid" Margin="10" VerticalAlignment="Top">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"></ColumnDefinition>
				<ColumnDefinition></ColumnDefinition>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
			</Grid.RowDefinitions>
			<Label Grid.Column="0" Grid.Row="0" Content="{x:Static resx:Resource.eGridSourceSongbookLabel}"/>
			<TextBox Grid.Column="1" Grid.Row="0" Margin="0,2,0,2" IsUndoEnabled="False" Text="{Binding ElementName=StructureTree, Path=SelectedItem.Songbook, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
			<Label Grid.Column="0" Grid.Row="1" Content="{x:Static resx:Resource.eGridSourceNumberLabel}"/>
			<TextBox Grid.Column="1" Grid.Row="1" IsUndoEnabled="False" Text="{Binding ElementName=StructureTree, Path=SelectedItem.Number, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
		</Grid>
	</Grid.Resources>
	<Grid.RowDefinitions>
		<RowDefinition Height="2*" MinHeight="50" />
		<RowDefinition Height="5" />
		<RowDefinition Height="*" MinHeight="50" />
	</Grid.RowDefinitions>
	<Grid.ColumnDefinitions>
		<ColumnDefinition Width="*" MinWidth="50" MaxWidth="250"/>
		<ColumnDefinition Width="5" />
		<ColumnDefinition Width="2*" MinWidth="50" />
		<ColumnDefinition Width="5" />
		<ColumnDefinition Width="*" MinWidth="50" />
	</Grid.ColumnDefinitions>
	<GridSplitter
		Grid.Column="1"
		Grid.Row="0"
		Grid.RowSpan="3"
		Background="#FFF0F0F0"
		BorderBrush="#FFE3E3E3"
		BorderThickness="1,0"
		HorizontalAlignment="Stretch"
		VerticalAlignment="Stretch" />
	<GridSplitter
		Grid.Column="3"
		Grid.Row="0"
		Grid.RowSpan="3"
		Background="#FFF0F0F0"
		BorderBrush="#FFE3E3E3"
		BorderThickness="1,0"
		HorizontalAlignment="Stretch"
		VerticalAlignment="Stretch" />
	<GridSplitter
		Grid.Row="1"
		Grid.Column="2"
		Background="#FFF0F0F0"
		BorderBrush="#FFE3E3E3"
		BorderThickness="0,1"
		HorizontalAlignment="Stretch"
		VerticalAlignment="Stretch" />
	<DockPanel
		Grid.Row="0"
		Grid.Column="0"
		LastChildFill="False"
		Margin="0"
		VerticalAlignment="Top"
		Background="{DynamicResource HeaderGradientBrush}"
		Height="26">
		<DockPanel.Resources>
			<Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"/>
		</DockPanel.Resources>
		<Button ToolTip="{x:Static resx:Resource.eGridAddElementButton}" CommandTarget="{Binding ElementName=StructureTree}" Command="{x:Static my:CustomCommands.Insert}" HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="0,2" DockPanel.Dock="Right" Focusable="False">
			<Image Width="16" Height="16" Source="/WordsLive;component/Artwork/Small_Plus.png" />
		</Button>
		<TextBlock
			Padding="5"
			Text="{x:Static resx:Resource.eGridPartsHeader}" />
	</DockPanel>
	<TreeView
		x:Name="StructureTree" ItemsSource="{Binding}"
		Grid.Row="0" Grid.Column="0" Margin="0,26,0,0" Grid.RowSpan="3"
		SelectedItemChanged="StructureTree_SelectedItemChanged"
		AllowDrop="True" Drop="StructureTree_Drop" DragOver="StructureTree_DragEnterOrOver" DragEnter="StructureTree_DragEnterOrOver"
		PreviewMouseLeftButtonDown="StructureTree_PreviewMouseLeftButtonDown"
		PreviewMouseMove="StructureTree_PreviewMouseMove">
		<TreeView.CommandBindings>
			<CommandBinding Command="{x:Static my:CustomCommands.Duplicate}" Executed="OnExecuteCommand"/>
			<CommandBinding Command="{x:Static my:CustomCommands.Rename}" Executed="OnExecuteCommand"/>
			<CommandBinding Command="Delete" Executed="OnExecuteCommand" CanExecute="OnCanExecuteCommand"/>
			<CommandBinding Command="{x:Static my:CustomCommands.Insert}" Executed="OnExecuteCommand"/>
			<CommandBinding Command="{x:Static my:CustomCommands.AddPart}" Executed="OnExecuteCommand"/>
		</TreeView.CommandBindings>
		<TreeView.Resources>
			<HierarchicalDataTemplate DataType="{x:Type local:SongNode}">
				<StackPanel Orientation="Horizontal">
					<Image Width="16" Height="16" Margin="0, 1, 2, 1" Source="{Binding IconUri}" />
					<TextBlock Text="{Binding Title}"/>
				</StackPanel>
			</HierarchicalDataTemplate>
			<HierarchicalDataTemplate DataType="{x:Type local:SongNodePart}"
				ItemsSource="{Binding Path=Children}">
				<StackPanel Orientation="Horizontal">
					<Image Width="16" Height="16" Margin="0, 1, 2, 1" Source="{Binding IconUri}" />
					<TextBlock Text="{Binding Title}">
						<TextBlock.ContextMenu>
							<ContextMenu>
								<MenuItem Header="{x:Static resx:Resource.eGridContextRename}" Command="{x:Static my:CustomCommands.Rename}" CommandParameter="{Binding}"/>
								<MenuItem Header="{x:Static resx:Resource.eGridContextRemovePart}" Command="Delete" CommandParameter="{Binding}"/>
								<MenuItem Header="{x:Static resx:Resource.eGridContextAddSlide}" Command="{x:Static my:CustomCommands.Insert}" CommandParameter="{Binding}"/>
							</ContextMenu>
						</TextBlock.ContextMenu>
					</TextBlock>
				</StackPanel>
			</HierarchicalDataTemplate>
			<HierarchicalDataTemplate DataType="{x:Type local:SongNodeRoot}"
				ItemsSource="{Binding Path=Children}">
				<StackPanel Orientation="Horizontal">
					<Image Width="16" Height="16" Margin="0, 1, 2, 1" Source="{Binding IconUri}" />
					<TextBlock Text="{Binding Title}">
						<TextBlock.ContextMenu>
							<ContextMenu>
								<MenuItem Header="{x:Static resx:Resource.eGridContextRenameSong}" Command="{x:Static my:CustomCommands.Rename}" CommandParameter="{Binding}"/>
								<MenuItem Header="{x:Static resx:Resource.eGridContextAddPart}" Command="{x:Static my:CustomCommands.Insert}" CommandParameter="{Binding}"/>
							</ContextMenu>
						</TextBlock.ContextMenu>
					</TextBlock>
				</StackPanel>
			</HierarchicalDataTemplate>
			<HierarchicalDataTemplate DataType="{x:Type local:SongNodeSlide}"
				ItemsSource="{Binding Path=Children}">
				<StackPanel Orientation="Horizontal">
					<Image Width="16" Height="16" Margin="0, 1, 2, 1" Source="{Binding IconUri}" />
					<TextBlock Text="{Binding Title}">
						<TextBlock.ContextMenu>
							<ContextMenu>
								<MenuItem Header="{x:Static resx:Resource.eGridContextRemoveSlide}" Command="Delete" CommandParameter="{Binding}"/>
								<MenuItem Header="{x:Static resx:Resource.eGridContextDuplicateSlide}" Command="{x:Static my:CustomCommands.Duplicate}" CommandParameter="{Binding}"/>
							</ContextMenu>
						</TextBlock.ContextMenu>
					</TextBlock>
				</StackPanel>
			</HierarchicalDataTemplate>
		</TreeView.Resources>
		<TreeView.ItemContainerStyle>
			<Style TargetType="{x:Type TreeViewItem}">
				<Setter Property="TreeViewItem.IsExpanded" Value="True"/>
				<!-- We have to select the item which is right-clicked on -->
				<EventSetter Event="TreeViewItem.PreviewMouseRightButtonDown" Handler="TreeViewItem_PreviewMouseRightButtonDown"/>
			</Style>
		</TreeView.ItemContainerStyle>
	</TreeView>
	<TextBlock
		Grid.Row="0"
		Grid.Column="2"
		Padding="5"
		Text="{x:Static resx:Resource.eGridPreviewHeader}"
		Background="{DynamicResource HeaderGradientBrush}"
		Height="26"
		VerticalAlignment="Top" />
	<local:EditorPreviewControl
				Grid.Row="0"
				Grid.Column="2"
				Margin="0,26,0,0"
				x:Name="PreviewControl" />
	<DockPanel
		Grid.Row="2"
		Grid.Column="2"
		LastChildFill="False"
		Margin="0"
		VerticalAlignment="Top"
		Background="{DynamicResource HeaderGradientBrush}"
		Height="26">
		<DockPanel.Resources>
			<Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"/>
		</DockPanel.Resources>
		<CheckBox x:Name="EnableSpellCheckCheckBox" DockPanel.Dock="Right" VerticalAlignment="Center" IsEnabled="False" IsChecked="{Binding Source={StaticResource settings}, Path=Default.EditorEnableSpellCheck, Mode=TwoWay}" Content="{x:Static resx:Resource.eGridSpellCheckCheckbox}"/>
		<TextBlock x:Name="EditHeader" Padding="5"/>
	</DockPanel>
	<Border Grid.Row="2"
		Grid.Column="2"
		Margin="0,26,0,0" Background="LightGray" x:Name="EditBorder">
	</Border>
	<DockPanel
		Grid.Row="0"
		Grid.Column="4"
		LastChildFill="False"
		Margin="0"
		VerticalAlignment="Top"
		Background="{DynamicResource HeaderGradientBrush}"
		Height="26">
		<TextBlock
		Padding="5"
		Text="{x:Static resx:Resource.eGridOrderHeader}"/>
		<Button CommandTarget="{Binding ElementName=OrderListBox}" Command="Delete" Style="{StaticResource markDisabledToolbarButton}" ToolTip="{x:Static resx:Resource.eGridOrderRemoveButton}"  HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="0,2" DockPanel.Dock="Right" Focusable="False">
			<Image Width="16" Height="16" Source="/WordsLive;component/Artwork/Small_Delete.png" />
		</Button>
		<Button CommandTarget="{Binding ElementName=OrderListBox}" Command="{x:Static my:CustomCommands.MoveDown}" Style="{StaticResource markDisabledToolbarButton}" ToolTip="{x:Static resx:Resource.eGridOrderMoveDownButton}"  HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="0,2" DockPanel.Dock="Right" Focusable="False">
			<Image Width="16" Height="16" Source="/WordsLive;component/Artwork/Small_DownArrow.png" />
		</Button>
		<Button CommandTarget="{Binding ElementName=OrderListBox}" Command="{x:Static my:CustomCommands.MoveUp}" Style="{StaticResource markDisabledToolbarButton}" ToolTip="{x:Static resx:Resource.eGridOrderMoveUpButton}"  HorizontalAlignment="Left" VerticalAlignment="Stretch" DockPanel.Dock="Right" Margin="0,2" Focusable="False">
			<Image Width="16" Height="16" Source="/WordsLive;component/Artwork/Small_UpArrow.png" />
		</Button>
		<Button CommandTarget="{Binding ElementName=OrderListBox}" Command="{x:Static my:CustomCommands.Insert}" Style="{StaticResource markDisabledToolbarButton}" ToolTip="{x:Static resx:Resource.eGridOrderAddButton}"  HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="0,2" DockPanel.Dock="Right" Focusable="False">
			<Image Width="16" Height="16" Source="/WordsLive;component/Artwork/Small_Plus.png" />
		</Button>
		<CheckBox x:Name="showSlidesCheckBox" VerticalAlignment="Center" DockPanel.Dock="Right" IsChecked="True" Margin="2,0">
			<TextBlock TextTrimming="CharacterEllipsis" ToolTip="{Binding Path=Text, RelativeSource={RelativeSource Self}}" Text="{x:Static resx:Resource.eGridOrderShowSlidesCheckbox}"/>
		</CheckBox>
	</DockPanel>

	<ListBox
		x:Name="OrderListBox" Grid.Column="4" Margin="0,26,0,0"
		Grid.RowSpan="3" AllowDrop="True"
		Drop="OrderListBox_Drop"
		DragOver="OrderListBox_DragEnterOrOver"
		DragEnter="OrderListBox_DragEnterOrOver"
		ScrollViewer.CanContentScroll="False"
		PreviewMouseMove="OrderListBox_PreviewMouseMove"
		PreviewMouseLeftButtonDown="OrderListBox_PreviewMouseLeftButtonDown"
		ItemsSource="{Binding PartOrder}" SelectionChanged="OrderListBox_SelectionChanged">
		<ListBox.CommandBindings>
			<CommandBinding Command="Delete" Executed="OrderListBox_OnExecuteCommand" CanExecute="OrderListBox_OnCanExecuteCommand"/>
			<CommandBinding Command="{x:Static my:CustomCommands.Insert}" Executed="OrderListBox_OnExecuteCommand" CanExecute="OrderListBox_OnCanExecuteCommand"/>
			<CommandBinding Command="{x:Static my:CustomCommands.MoveUp}" Executed="OrderListBox_OnExecuteCommand" CanExecute="OrderListBox_OnCanExecuteCommand"/>
			<CommandBinding Command="{x:Static my:CustomCommands.MoveDown}" Executed="OrderListBox_OnExecuteCommand" CanExecute="OrderListBox_OnCanExecuteCommand"/>
		</ListBox.CommandBindings>
		<ListBox.ItemTemplate>
			<DataTemplate>
				<StackPanel Orientation="Vertical">
					<TextBlock Text="{Binding Content.Title}" FontWeight="Bold" FontSize="13" Margin="2" Foreground="Gray"/>
					<ItemsControl ItemsSource="{Binding Content.Children}">
						<ItemsControl.Style>
							<Style>
								<Style.Setters>
									<Setter Property="ItemsControl.Visibility" Value="Collapsed" />
								</Style.Setters>
								<Style.Triggers>
									<DataTrigger Binding="{Binding ElementName=showSlidesCheckBox, Path=IsChecked}" Value="True">
										<Setter Property="ItemsControl.Visibility" Value="Visible" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</ItemsControl.Style>
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<StackPanel Orientation="Horizontal">
									<Image Source="{Binding Background, Converter={StaticResource BackgroundConverter}, ConverterParameter=60}" Height="45" Width="60" Stretch="Fill" VerticalAlignment="Top" Margin="0,5,0,0"/>
									<TextBlock Text="{Binding TextWithoutChords}" Margin="5,0,0,5"/>
								</StackPanel>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</StackPanel>
			</DataTemplate>
		</ListBox.ItemTemplate>
		<ListBox.ItemContainerStyle>
			<Style TargetType="{x:Type ListBoxItem}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ListBoxItem}">
							<Border BorderThickness="2" x:Name="IconBorder" Margin="0" Padding="2" SnapsToDevicePixels="True" Background="White" BorderBrush="White">
								<ContentPresenter />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsSelected" Value="true">
									<Setter TargetName="IconBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
									<Setter TargetName="IconBorder" Property="Background" Value="LightBlue"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ListBox.ItemContainerStyle>
	</ListBox>
</Grid>
